version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: movietheater
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d movietheater"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: Migrator.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=root;Server=postgres;Port=5432;Database=movietheater
    command: >
      sh -c "
      echo '⏳ Aguardando PostgreSQL ficar disponível...';
      until pg_isready -h postgres -U postgres -d movietheater; do sleep 2; done;
      echo '🛠️ Aplicando migrations...';
      dotnet ef database update --project ../Infrastructure --startup-project .
      "

  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "User ID=postgres;Password=root;Server=postgres;Port=5432;Database=movietheater;Pooling=true;"
      ConnectionStrings__Redis: "redis:6379"

volumes:
  pg_data:
  redis_data:  